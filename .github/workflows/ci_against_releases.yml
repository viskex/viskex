name: CI (against releases)

on:
  schedule:
    - cron: "0 2 * * *"
  workflow_dispatch:
  workflow_call:

jobs:
  # Test latest released version on PyPI against the workflow on the current main branch.
  # If main becomes incompatible with the latest version on PyPI then temporarily
  # comment out this test, and restore it on the next PyPI release.

  # TODO: commented out because of backward incompatible changes b4364f5. Re-enable when 0.2.0 is released
  # test_main_branch_against_latest_release_from_pypi:
  #  uses: viskex/viskex/.github/workflows/ci.yml@main
  #  with:
  #    ref: main
  #    index: PyPI
  #    combine_coverage: false

  # Test released versions on github or PyPI against the workflow on the corresponding git tag.

  test_0_1_0_installing_from_github:
    uses: viskex/viskex/.github/workflows/ci.yml@v0.1.0
    with:
      ref: v0.1.0
      combine_coverage: false

  test_0_1_0_installing_from_pypi_versioned:
    uses: viskex/viskex/.github/workflows/ci.yml@v0.1.0
    with:
      ref: v0.1.0
      index: PyPI
      index_version: 0.1.0
      expected_index_version: 0.1.0
      combine_coverage: false

  test_0_1_0_installing_from_pypi_unversioned:
    uses: viskex/viskex/.github/workflows/ci.yml@v0.1.0
    with:
      ref: v0.1.0
      index: PyPI
      expected_index_version: 0.1.0
      combine_coverage: false

  warn:
    runs-on: ubuntu-latest
    if: github.repository == 'viskex/viskex' && github.ref == 'refs/heads/main' && github.event_name == 'schedule'
    steps:
      - name: Warn if scheduled workflow is about to be disabled
        uses: fem-on-colab/warn-workflow-about-to-be-disabled-action@main
        with:
          workflow-filename: ci_against_releases.yml
          days-elapsed: 50
